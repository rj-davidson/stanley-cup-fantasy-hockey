// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// EntriesColumns holds the columns for the "entries" table.
	EntriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "owner_name", Type: field.TypeString},
		{Name: "point_total", Type: field.TypeInt},
		{Name: "league_entries", Type: field.TypeInt, Nullable: true},
	}
	// EntriesTable holds the schema information for the "entries" table.
	EntriesTable = &schema.Table{
		Name:       "entries",
		Columns:    EntriesColumns,
		PrimaryKey: []*schema.Column{EntriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "entries_leagues_entries",
				Columns:    []*schema.Column{EntriesColumns[3]},
				RefColumns: []*schema.Column{LeaguesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// LeaguesColumns holds the columns for the "leagues" table.
	LeaguesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "season", Type: field.TypeInt},
		{Name: "public", Type: field.TypeBool},
		{Name: "num_forwards", Type: field.TypeInt},
		{Name: "num_defenders", Type: field.TypeInt},
		{Name: "num_goalies", Type: field.TypeInt},
		{Name: "points_for_goal", Type: field.TypeInt},
		{Name: "points_for_assist", Type: field.TypeInt},
		{Name: "goalie_points_for_shutout", Type: field.TypeInt},
		{Name: "goalie_points_for_win", Type: field.TypeInt},
		{Name: "edit_key", Type: field.TypeString},
		{Name: "code", Type: field.TypeString, Unique: true},
	}
	// LeaguesTable holds the schema information for the "leagues" table.
	LeaguesTable = &schema.Table{
		Name:       "leagues",
		Columns:    LeaguesColumns,
		PrimaryKey: []*schema.Column{LeaguesColumns[0]},
	}
	// PlayersColumns holds the columns for the "players" table.
	PlayersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "position", Type: field.TypeEnum, Enums: []string{"F", "D", "G"}},
		{Name: "goals", Type: field.TypeInt},
		{Name: "assists", Type: field.TypeInt},
		{Name: "shutouts", Type: field.TypeInt},
		{Name: "wins", Type: field.TypeInt},
		{Name: "entry_forwards", Type: field.TypeInt, Nullable: true},
		{Name: "entry_defenders", Type: field.TypeInt, Nullable: true},
		{Name: "entry_goalies", Type: field.TypeInt, Nullable: true},
		{Name: "team_players", Type: field.TypeInt, Nullable: true},
	}
	// PlayersTable holds the schema information for the "players" table.
	PlayersTable = &schema.Table{
		Name:       "players",
		Columns:    PlayersColumns,
		PrimaryKey: []*schema.Column{PlayersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "players_entries_forwards",
				Columns:    []*schema.Column{PlayersColumns[7]},
				RefColumns: []*schema.Column{EntriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "players_entries_defenders",
				Columns:    []*schema.Column{PlayersColumns[8]},
				RefColumns: []*schema.Column{EntriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "players_entries_goalies",
				Columns:    []*schema.Column{PlayersColumns[9]},
				RefColumns: []*schema.Column{EntriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "players_teams_players",
				Columns:    []*schema.Column{PlayersColumns[10]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TeamsColumns holds the columns for the "teams" table.
	TeamsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "logo_filepath", Type: field.TypeString, Unique: true},
		{Name: "eliminated", Type: field.TypeBool, Default: false},
	}
	// TeamsTable holds the schema information for the "teams" table.
	TeamsTable = &schema.Table{
		Name:       "teams",
		Columns:    TeamsColumns,
		PrimaryKey: []*schema.Column{TeamsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		EntriesTable,
		LeaguesTable,
		PlayersTable,
		TeamsTable,
	}
)

func init() {
	EntriesTable.ForeignKeys[0].RefTable = LeaguesTable
	PlayersTable.ForeignKeys[0].RefTable = EntriesTable
	PlayersTable.ForeignKeys[1].RefTable = EntriesTable
	PlayersTable.ForeignKeys[2].RefTable = EntriesTable
	PlayersTable.ForeignKeys[3].RefTable = TeamsTable
}
